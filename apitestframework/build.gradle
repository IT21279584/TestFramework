plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.0'
	id 'io.spring.dependency-management' version '1.1.6'

}


group = 'com.mdscem'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(8)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	implementation 'com.fasterxml.jackson.core:jackson-core:2.15.0'
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.0'
	implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.7.4'
	implementation 'org.springframework.boot:spring-boot-starter-mustache'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	implementation 'org.skyscreamer:jsonassert:1.5.1'

	//Extend Report
	implementation 'com.aventstack:extentreports:5.0.9'

	implementation 'org.assertj:assertj-core:3.24.2'
	implementation 'commons-beanutils:commons-beanutils:1.9.4'


	implementation 'org.apache.commons:commons-text:1.10.0'
	implementation 'org.apache.logging.log4j:log4j-core:2.17.2'
	implementation 'org.apache.logging.log4j:log4j-api:2.17.2'
	implementation 'com.networknt:json-schema-validator:1.0.82'
	testImplementation 'junit:junit:4.13.2'

	implementation 'org.springframework:spring-web:5.3.30'
	implementation 'org.assertj:assertj-core:3.24.2'

	implementation 'org.junit.platform:junit-platform-console-standalone:1.10.0'
	implementation 'org.springframework.boot:spring-boot-starter'
	testImplementation 'org.junit.jupiter:junit-jupiter:5.10.0'
	testRuntimeOnly 'org.junit.platform:junit-platform-console:1.10.0' // Add Console Launcher
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	// https://mvnrepository.com/artifact/io.rest-assured/rest-assured
	implementation 'io.rest-assured:rest-assured:4.3.3'
	testImplementation group: 'io.rest-assured', name: 'rest-assured', version: '4.3.3'
	// https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api
	testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.10.2'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'




	//assertJ
	testImplementation 'org.assertj:assertj-core:3.24.2'

}

tasks.named('test') {
	useJUnitPlatform()
}

test {
	ignoreFailures = true


}
jar {
	enabled = true
	from sourceSets.main.output
	from sourceSets.test.output
	from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE  // Exclude duplicate files

}

task fatJar(type: Jar) {

	group = 'build'
	description = 'Assembles a jar archive containing both main and test classes and dependencies.'

	archiveClassifier = 'all'

	from {
		configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
	}

	from sourceSets.main.output
	from sourceSets.test.output

	duplicatesStrategy = DuplicatesStrategy.EXCLUDE // Exclude duplicate files

	exclude 'flows/**'
	exclude 'includes/**'
	exclude 'testcases/**'

	dependsOn testClasses
}
bootJar {
	enabled = true
	from sourceSets.main.output
	from sourceSets.test.output
	from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }

	duplicatesStrategy = DuplicatesStrategy.EXCLUDE  // Exclude duplicate files

}
